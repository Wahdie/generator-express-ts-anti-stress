import request from 'supertest';
import app from '../../src/app';

describe('<%= modelName %> Controller', () => {
  let createdId: string;

  it('should create a <%= modelName.toLowerCase() %>', async () => {
    const res = await request(app)
      .post('/<%= modelName.toLowerCase() %>')
      .send(<%- JSON.stringify(examplePayload, null, 2) %>);
    expect(res.statusCode).toBe(201);
    createdId = res.body.id || res.body._id;
  });

  it('should return all <%= modelName.toLowerCase() %>s', async () => {
    const res = await request(app).get('/<%= modelName.toLowerCase() %>');
    expect(res.statusCode).toBe(200);
    expect(Array.isArray(res.body)).toBe(true);
  });

  it('should return a single <%= modelName.toLowerCase() %>', async () => {
    const res = await request(app).get(`/ <%= modelName.toLowerCase() %>/${createdId}`);
    expect(res.statusCode).toBe(200);
    expect(res.body).toHaveProperty('id');
  });

  it('should update the <%= modelName.toLowerCase() %>', async () => {
    const res = await request(app)
      .put(`/ <%= modelName.toLowerCase() %>/${createdId}`)
      .send(<%- JSON.stringify(exampleUpdatePayload, null, 2) %>);
    expect(res.statusCode).toBe(200);
  });

  it('should delete the <%= modelName.toLowerCase() %>', async () => {
    const res = await request(app).delete(`/ <%= modelName.toLowerCase() %>/${createdId}`);
    expect(res.statusCode).toBe(204);
  });
});
